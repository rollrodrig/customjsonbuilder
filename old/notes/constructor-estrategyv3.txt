
# incoming request 
{ name: string, age:number }

# prev
1. remove spaces
{name:string,age:number}
2. validate if {} and [] are equals.
{name:string,age:number}
3. remove first {} or []
name:string,age:number
4. split on ,
[name:string,age:number]
# end prev

# loop
[name:string,age:number]
. take [0]
name:string
. split on :? yes
[name,string]
    # loop 
    [name,string]
    . take [0]
    name
    . split on :? no
        return name
    . take [1]
    . split on :? no
        return string
. take [1]
age:number
. split on :?yes
    # loop
    [age,number]
    . take [0]
    age
    . split on : ? no
        return age
    . take [1]
    number
    split on :? no
    return number



# loop
[name:string,personal:{phone:number,email:email}]
. take [0]
name:string
. split on :? yes
[name,string]
    # loop 
    [name,string]
    . take [0]
    name
    . split on :? no
        return name
    . take [1]
    . split on :? no
        return string
. take [1]
personal:{phone:number,email:email}
. split on :?yes
    # loop
    [personal,{phone:number,email:email}]
    . take [0]
    personal
    . split on : ? no
        return personal
    . take [1]
    {phone:number,email:email}
    . remove {}
    phone:number,email:email
    . coma divide
    ["phone:number","email:email"]
        # loop
        ["phone:number","email:email"]
        . take []
        phone:number
        . split on : ? yes
        [phone,number]
            # loop
            [phone,number]


# case
k:{name:string}
{name:string}
name, string



# case
k:{name:string, age:number}
# case
k:[{name:string};10]

# from inside to outside
{personal:{phone:number,email:email}}

# string
{personal:{phone:number,email:email}}
. remove {}
personal:{phone:number,email:email}
. divide on comma
["personal:{phone:number,email:email}"]
if length === 1
    .split on :

else
. loop array
    . take [0]
    . string
    personal:{phone:number,email:email}
    . remove {}
    personal:{phone:number,email:email}
    . divide on coma
    ["personal:{phone:number,email:email}"] 




. split on :
[personal,{phone:number,email:email}]
. store [0]
. loop [1]
    . string
    {phone:number,email:email}
    . remove {}
    phone:number,email:email






# previous
{ name: string }
1. remove spaces
{name:string}
2. transform to array
["i:{name:string}"]
# end

0. array 
["i:{name:string}"]
1. split on :
[i,{name:string}]
2. loop throw array
    [i,{name:string}]
    2.1 take first element
        i
        2.1.1 is Key value pattern? NO
        return i;
    2.2 take second element
    {nane:string}



    3.1 split on :
        [i, {name:string}]
    3.1 loop throw array
        [i, {name:string}]

        3.2.1 
        3.2.2 take first element
            i
        3.2.2 



["i:{name:string}"]
1. take first element
i:{name:string}
2. is Key Value? have the patten 'somethign:something'
    1. split on :
    [i,{name:string}]
    # loop throw array
    1. take





